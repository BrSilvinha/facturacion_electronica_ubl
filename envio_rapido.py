#!/usr/bin/env python
"""
Script R√ÅPIDO para enviar documento 01-F001-250707011 a SUNAT
Ejecutar: python envio_rapido.py
"""

import requests
import json
import os
import sys
from pathlib import Path

def obtener_documento_id():
    """Busca el √∫ltimo documento generado en la base de datos"""
    
    print("üîç Buscando documento m√°s reciente...")
    
    try:
        # Configurar Django
        sys.path.append(str(Path(__file__).parent))
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'facturacion_electronica.settings')
        
        import django
        django.setup()
        
        from documentos.models import DocumentoElectronico
        
        # Buscar el documento espec√≠fico o el m√°s reciente
        documento = DocumentoElectronico.objects.filter(
            serie='F001',
            estado__in=['FIRMADO', 'FIRMADO_SIMULADO']
        ).order_by('-created_at').first()
        
        if documento:
            print(f"‚úÖ Documento encontrado: {documento.get_numero_completo()}")
            print(f"   ID: {documento.id}")
            print(f"   Estado: {documento.estado}")
            print(f"   Total: S/ {documento.total}")
            return str(documento.id)
        else:
            print("‚ùå No se encontr√≥ documento firmado")
            return None
            
    except Exception as e:
        print(f"‚ö†Ô∏è Error accediendo BD: {e}")
        return None

def enviar_a_sunat(documento_id):
    """Env√≠a el documento a SUNAT Beta"""
    
    API_BASE = "http://localhost:8000/api"
    
    print(f"\nüì§ Enviando documento a SUNAT Beta...")
    print(f"   ID: {documento_id}")
    
    try:
        # Verificar servidor
        test_response = requests.get(f"{API_BASE}/test/", timeout=5)
        if test_response.status_code != 200:
            print("‚ùå Servidor Django no responde")
            return False
        
        print("‚úÖ Servidor OK")
        
        # Enviar a SUNAT
        response = requests.post(
            f"{API_BASE}/sunat/send-bill/",
            headers={"Content-Type": "application/json"},
            json={"documento_id": documento_id},
            timeout=30
        )
        
        print(f"üì° Respuesta SUNAT: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            print("\nüéâ RESPUESTA DE SUNAT:")
            print("-" * 40)
            
            if result.get('success'):
                print(f"‚úÖ √âXITO: {result.get('document_number', 'N/A')}")
                print(f"üìã Estado: {result.get('document_status', 'N/A')}")
                print(f"‚ö° M√©todo: {result['sunat_response']['method']}")
                print(f"‚è±Ô∏è Tiempo: {result['sunat_response']['duration_ms']}ms")
                
                # CDR info si disponible
                if 'cdr_info' in result:
                    cdr = result['cdr_info']
                    print(f"\nüìÑ CDR:")
                    print(f"   Aceptado: {'‚úÖ S√ç' if cdr['is_accepted'] else '‚ùå NO'}")
                    print(f"   C√≥digo: {cdr['response_code']}")
                    print(f"   Descripci√≥n: {cdr['response_description']}")
                
                return True
            else:
                print(f"‚ùå Error: {result.get('error', 'Desconocido')}")
                print(f"üîß Tipo: {result.get('error_type', 'N/A')}")
                
                # Si es error de implementaci√≥n, mostrar simulaci√≥n
                if 'NOT_IMPLEMENTED' in result.get('error_type', ''):
                    print(f"\nüí° SIMULACI√ìN:")
                    print(f"   ‚úÖ Documento procesado localmente")
                    print(f"   üìã Ticket simulado: {result.get('simulated_response', {}).get('ticket', 'N/A')}")
                    return True
                
                return False
        else:
            print(f"‚ùå Error HTTP: {response.status_code}")
            try:
                error_data = response.json()
                print(f"   Detalle: {error_data}")
            except:
                print(f"   Respuesta: {response.text[:200]}...")
            return False
            
    except requests.exceptions.Timeout:
        print("‚è±Ô∏è Timeout - SUNAT puede estar procesando")
        print("   üí° El documento puede haberse enviado correctamente")
        return False
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def main():
    """Funci√≥n principal"""
    
    print("üöÄ ENV√çO R√ÅPIDO A SUNAT BETA")
    print("=" * 50)
    print("Documento: 01-F001-250707011")
    print("Estado: FIRMADO con certificado real")
    print("")
    
    # M√©todo 1: Buscar autom√°ticamente
    documento_id = obtener_documento_id()
    
    # M√©todo 2: Manual si falla autom√°tico
    if not documento_id:
        print("\nüìù Ingresa manualmente el documento_id:")
        print("   (UUID de la respuesta JSON al generar XML)")
        documento_id = input("ID: ").strip()
        
        if not documento_id:
            print("‚ùå documento_id requerido")
            return
    
    # Enviar a SUNAT
    if enviar_a_sunat(documento_id):
        print(f"\nüéä ¬°PROCESO COMPLETADO!")
        print(f"üìÑ Documento enviado a SUNAT Beta exitosamente")
    else:
        print(f"\n‚ö†Ô∏è PROCESO CON ERRORES")
        print(f"üîß Revisa la configuraci√≥n de SUNAT")

if __name__ == '__main__':
    main()